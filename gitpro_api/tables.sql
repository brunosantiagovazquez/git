--ROLE TABLE
--INDICATES ROLE NAME AND BITS (0 - 1) FOR ROLE PERMISSIONS (READ ROLE PERMISSIONS IS FOREVER ALLOWED)
CREATE TABLE IF NOT EXISTS GP_ROL (
	NOMBRE_ROL VARCHAR(50) NOT NULL,
	CREAR_ROL BIT DEFAULT 0,
	ASIGNAR_ROL BIT DEFAULT 0,
	CONSULTAR_TAREA BIT DEFAULT 0,
	ASIGNAR_TAREA BIT DEFAULT 0,
	ACTUALIZAR_TAREA BIT DEFAULT 0,
	ASOCIAR_ARCHIVOS BIT DEFAULT 0,
	BORRAR_TAREA BIT DEFAULT 0,
	CREAR_TAREA BIT DEFAULT 0,
	BORRAR_ROL BIT DEFAULT 0,
	ACTUALIZAR_ROL BIT DEFAULT 0,
	CONSTRAINT ROL_PK PRIMARY KEY (NOMBRE_ROL)
);
--DEFAULT ROLE IS 'PUBLIC' WITH ONLY READ TASK PERMISSIONS
INSERT INTO GP_ROL(NOMBRE_ROL,CONSULTAR_TAREA) VALUES ('PUBLIC',1);

--STATE TABLE
--HAS ALLOWED TASK STATES (IF NEW ADDED HAS NO GUARANTEE TO RUN CORRECTLY)
CREATE TABLE IF NOT EXISTS GP_ESTADO (
	NOMBRE_ESTADO VARCHAR(30) NOT NULL,
	CONSTRAINT ESTADO_PK PRIMARY KEY (NOMBRE_ESTADO)
);
INSERT INTO GP_ESTADO(NOMBRE_ESTADO) VALUES ('NEW');
INSERT INTO GP_ESTADO(NOMBRE_ESTADO) VALUES ('IN PROGRESS');
INSERT INTO GP_ESTADO(NOMBRE_ESTADO) VALUES ('REJECTED');
INSERT INTO GP_ESTADO(NOMBRE_ESTADO) VALUES ('RESOLVED');

--TYPE TABLE
--HAS DEFAULT TASK TYPES (ADMIN CAN ADD MORE IF NEEDED)
CREATE TABLE IF NOT EXISTS GP_TIPO (
	NOMBRE_TIPO VARCHAR(30) NOT NULL,
	CONSTRAINT TIPO_PK PRIMARY KEY (NOMBRE_TIPO)
);
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('ANALYSIS');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('DESIGN');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('MANAGEMENT');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('QUALITY');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('DEVELOPMENT');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('TEST');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('MAINTENANCE');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('SUPPORT');
INSERT INTO GP_TIPO(NOMBRE_TIPO) VALUES ('CONFIGURATION');

--PRIORITY TABLE
--HAS DEFAULT TASK PRIORITIES (ADMIN CAN ADD MORE IF NEEDED)
CREATE TABLE IF NOT EXISTS GP_PRIOR (
	NOMBRE_PRIORIDAD VARCHAR(30) NOT NULL,
	CONSTRAINT PRIOR_PK PRIMARY KEY (NOMBRE_PRIORIDAD)
);
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('VERY LOW');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('LOW');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('MINOR');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('MAJOR');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('HIGH');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('VERY HIGH');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('URGENT');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('INMEDIATE');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('CRITICAL');
INSERT INTO GP_PRIOR(NOMBRE_PRIORIDAD) VALUES ('BLOCKER');

--USER TABLE
--HAS USER NAME AND ROLE ASSIGNED (PUBLIC BY DEFAULT)
CREATE TABLE IF NOT EXISTS GP_USUARIO (
	NOMBRE_USUARIO VARCHAR(100) NOT NULL,
	NOMBRE_ROL_USUARIO VARCHAR(50) NOT NULL,
	CONSTRAINT USUARIO_PK PRIMARY KEY (NOMBRE_USUARIO),
	CONSTRAINT USUARIO_ROL_FK FOREIGN KEY (NOMBRE_ROL_USUARIO) REFERENCES GP_ROL(NOMBRE_ROL)
);

--TASK TABLE
--HAS TASK INFO (DATES ARE STORED AS TEXT WITH 'dd/mm/yyyy' BECAUSE SQLITE3 HAS NOT DATE TYPE 
CREATE TABLE IF NOT EXISTS GP_TAREA (
	ID NUMERIC(10,0) NOT NULL,
	NOMBRE_TAREA VARCHAR(150) NOT NULL,
	ESTADO_TAREA VARCHAR(30) NOT NULL,
	DESCRIPCION VARCHAR(1000),
	NOTAS VARCHAR(4000),
	FECHA_INICIO_ESTIMADA VARCHAR(10),
	FECHA_FINAL_ESTIMADA VARCHAR(10),
	FECHA_INICIO_REAL VARCHAR(10),
	FECHA_FINAL_REAL VARCHAR(10),
	PRIORIDAD_TAREA VARCHAR(30) NOT NULL,
	TIPO_TAREA VARCHAR(30) NOT NULL,
	TIEMPO_REAL_MIN NUMERIC(10,2),
	TIEMPO_ESTIMADO_MIN NUMERIC(10,2),
	CONSTRAINT TAREA_PK PRIMARY KEY (ID),
	CONSTRAINT TAREA_ESTADO_FK FOREIGN KEY (ESTADO_TAREA) REFERENCES GP_ESTADO(NOMBRE_ESTADO),
	CONSTRAINT TAREA_PRIORIDAD_FK FOREIGN KEY (PRIORIDAD_TAREA) REFERENCES GP_PRIOR(NOMBRE_PRIORIDAD),
	CONSTRAINT TAREA_TIPO_FK FOREIGN KEY (TIPO_TAREA) REFERENCES GP_PRIOR(NOMBRE_TIPO)
);	

--FILE TABLE
--HAS FILE NAME AND PATH
CREATE TABLE IF NOT EXISTS GP_ARCHIVO (
	NOMBRE_ARCHIVO VARCHAR(100) NOT NULL,
	RUTA_ARCHIVO VARCHAR(300) NOT NULL,
	CONSTRAINT ARCHIVO_PK PRIMARY KEY (RUTA_ARCHIVO)
);

--ASOCIATIONS TABLE
--HAS ASOCIATIONS BETWEEN FILES AND TASKS
CREATE TABLE IF NOT EXISTS GP_ASOCIACIONES (
	RUTA_ARCHIVO_ASOC VARCHAR(300) NOT NULL,
	ID_ASOC NUMERIC(10,0) NOT NULL,
	CONSTRAINT ASOC_PK PRIMARY KEY (RUTA_ARCHIVO_ASOC,ID_ASOC),
	CONSTRAINT ASOC_ARCHIVO_FK FOREIGN KEY (RUTA_ARCHIVO_ASOC) REFERENCES GP_ARCHIVO(RUTA_ARCHIVO),
	CONSTRAINT ASOC_TAREA_FK FOREIGN KEY (ID_ASOC) REFERENCES GP_TAREA(ID)
);

--ASIGNATIONS TABLE
--HAS ASIGNATIONS BETWEEN USERS AND TASKS
CREATE TABLE IF NOT EXISTS GP_ASIGNACIONES (
	NOMBRE_USUARIO_ASIG VARCHAR(100) NOT NULL,
	ID_ASIG NUMERIC(10,0) NOT NULL,
	CONSTRAINT ASIG_PK PRIMARY KEY (NOMBRE_USUARIO_ASIG,ID_ASIG),
	CONSTRAINT ASIG_USUARIO_FK FOREIGN KEY (NOMBRE_USUARIO_ASIG) REFERENCES GP_USUARIO(NOMBRE_USUARIO),
	CONSTRAINT ASIG_TAREA_FK FOREIGN KEY (ID_ASIG) REFERENCES GP_TAREA(ID)
);
